{"version":3,"file":"static/js/543.b35b3029.chunk.js","mappings":"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","sources":["components/api.jsx","components/movies/styled.jsx","components/movies/searchBox.jsx","components/movies/movieList.jsx","components/pages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '29b0d2aa85a3c0b16bad1778a50b3bea';\n\nexport const fetchMovieTrending = async () => {\n  const response = await axios.get('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieSearch = async input => {\n  const response = await axios.get('search/movie', {\n    params: { query: input, api_key: API_KEY },\n  });\n  console.log();\n  return response.data.results;\n};\n\nexport const fetchMovieDetail = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const response = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY\n    },\n  });\n  console.log(response.data.results);\n  return response.data.results;\n};\n","import { styled } from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nexport const Description = styled.div``;\nexport const Container = styled.div`\n  display: flex;\n  max-width: 1400px;\n  margin: 0 auto;\n  gap: 50px;\n`;\n\nexport const MovieImage = styled.img`\n  width: 80%;\n  object-fit: cover;\n  margin-bottom: 20px;\n`;\n\nexport const DescriptionText = styled.p`\n  width: 803px;\n  font-size: 40px;\n  font-weight: 300;\n  margin: 5px 0;\n`;\nexport const GenresContainer = styled.h3`\n  display: flex;\n  gap: 20px;\n  font-size: 60px;\n  font-weight: 500;\n  margin: 5px 0;\n`;\n\nexport const Genres = styled.p`\n  font-size: 40px;\n  font-weight: 300;\n  margin: 5px 0;\n`;\nexport const MovieListLink = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  &:hover {\n    color: #2fdefd;\n    \n  }\n\n`;\n","import styled from 'styled-components';\n\nconst SearchContainer = styled.form`\n\n  display: flex;\n  align-items: center;\n  width: 1400px;\n  margin: 30px auto;\n`;\n\nconst Input = styled.input`\n  padding: 0.5rem;\n  font-size: 30px;\n  border: none;\n  border-radius: 4px;\n  background-color: #f2f2f2;\n  box-shadow: 0 2px 4px rgba(34, 34, 34, 0.1);\n  flex-grow: 1;\n  color: #333;\n`;\n\nconst Button = styled.button`\n  padding: 0.5rem 1rem;\n  font-size: 30px;\n  background-color: #000000;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  margin-left: 0.5rem;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #23527c;\n  }\n`;\n\nconst SearchBox = ({ handleSubmit }) => {\n  const onSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    handleSubmit(form.elements.query.value);\n    form.reset();\n  };\n\n  return (\n    <SearchContainer onSubmit={onSubmit}>\n      <Input type=\"text\" name=\"query\" placeholder=\"Search...\" />\n      <Button type=\"submit\">Search</Button>\n    </SearchContainer>\n  );\n};\n\nexport default SearchBox;\n","\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { MovieListLink } from './styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  \n  return (\n    <ul>\n      {movies.map(({id, title}) => {\n        return (\n          <li key={id} >\n            <MovieListLink to={`/movies/${id}`} state={{from:location}}>{title}</MovieListLink>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBox from 'components/movies/searchBox.jsx';\nimport { MoviesList } from 'components/movies/movieList.jsx';\nimport { fetchMovieSearch } from '../api.jsx';\n\nconst MoviesPage = () => {\n  const [moviesFounded, setMoviesFounded] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n    \n  useEffect(() => {\n\n    async function fetchMovie() {\n      const list = await fetchMovieSearch(query);\n      setMoviesFounded(list);\n    }\n\n    fetchMovie();\n  }, [query]);\n    \n    const handleSubmit = input => {\n        if (searchParams === '') {\n            return setSearchParams({});\n          }\n    setSearchParams({ query: input });\n  };\n\n  return (\n    <>\n          <SearchBox handleSubmit={handleSubmit} />\n          {moviesFounded && <MoviesList movies={moviesFounded}/>}\n          \n    </>\n  );\n};\nexport default MoviesPage;\n"],"names":["axios","API_KEY","fetchMovieTrending","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","params","api_key","language","sent","abrupt","data","results","stop","apply","arguments","fetchMovieSearch","_ref2","_callee2","input","_context2","query","console","log","_x","fetchMovieDetail","_ref3","_callee3","id","_context3","concat","_x2","fetchMovieCredits","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","Description","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","MovieImage","_templateObject3","DescriptionText","_templateObject4","GenresContainer","_templateObject5","Genres","_templateObject6","MovieListLink","NavLink","_templateObject7","SearchContainer","Input","Button","handleSubmit","_jsxs","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","children","_jsx","type","name","placeholder","MoviesList","movies","location","useLocation","map","title","to","state","from","_useState","useState","_useState2","_slicedToArray","moviesFounded","setMoviesFounded","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","_fetchMovie","list","fetchMovie","_Fragment","SearchBox"],"sourceRoot":""}